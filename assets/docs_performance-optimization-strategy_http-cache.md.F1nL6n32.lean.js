import{_ as s,c as e,o as a,U as i}from"./chunks/framework.7gXuOlLR.js";const t="/HTTP-Explanation/assets/no-have-cache-example.rJRNBclw.png",o="/HTTP-Explanation/assets/private-public-cache.Bv38zo3j.png",n="/HTTP-Explanation/assets/cache-flow-example._5wtAKjI.png",l="/HTTP-Explanation/assets/keyed-with-url.38AYl1hQ.png",p="/HTTP-Explanation/assets/keyed-with-url-and-language.rfmApQN9.png",d="/HTTP-Explanation/assets/request-collapse.JMwmlAxT.png",T=JSON.parse('{"title":"HTTP缓存","description":"HTTP缓存是一种HTTP的性能优化机制，它是为了提高Web页面加载速度和减轻服务器负载而设计的，通过这种机制，Web浏览器或其他客户端可以存储先前获取的Web资源的副本，并在后续请求相同资源时使用这些副本，而不是再次从服务器请求。","frontmatter":{"title":"HTTP缓存","head":[["meta",{"name":"description","content":"HTTP缓存是一种HTTP的性能优化机制，它是为了提高Web页面加载速度和减轻服务器负载而设计的，通过这种机制，Web浏览器或其他客户端可以存储先前获取的Web资源的副本，并在后续请求相同资源时使用这些副本，而不是再次从服务器请求。"}],["meta",{"name":"keywords","content":"HTTP HTTP缓存 HTTP缓存的工作流程 私有缓存 共享缓存 强制重新验证 不使用缓存 请求折叠 无法删除以及重新验证的缓存 可被缓存的请求方法 控制缓存存放位置 控制缓存时间 Cache-Control Expires Vary Last-Modified If-Modified-Since ETag If-None-Match"}]]},"headers":[],"relativePath":"docs/performance-optimization-strategy/http-cache.md","filePath":"docs/performance-optimization-strategy/http-cache.md","lastUpdated":1704624300000}'),c={name:"docs/performance-optimization-strategy/http-cache.md"},h=i("",145),r=[h];function g(k,u,C,E,b,m){return a(),e("div",null,r)}const f=s(c,[["render",g]]);export{T as __pageData,f as default};
